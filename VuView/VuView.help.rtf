{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fnil\fcharset77 Monaco;\f1\fswiss\fcharset77 Helvetica-Bold;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
\red0\green115\blue0;\red0\green0\blue191;\red0\green115\blue0;\red191\green0\blue0;\red96\green96\blue96;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b\fs36 \cf0 VuView a gui view with a gauge\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b0\fs18 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b\fs24 \cf0 	*new(parent, bounds);\
	\
		bounds
\f2\b0 : a Rect(\
					distance from left,\
					distance from bottom,\
					width,\
					height\
				)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 \
(\cf2 \
\cf3 var\cf2  txt;\
w = \cf3 SCWindow\cf2 (\cf4 "Meter"\cf2 , \cf3 Rect\cf2 (300,400,300,120));\
w.view.decorator = \cf3 FlowLayout\cf2 (w.view.bounds);\
w.front;\
m = \cf3 VuView\cf2 (w, 120@80);\
\cf3 Knob\cf2 (w, 32@32)\
	.action = \{\cf3 |v|\cf2 \
		m.value = \cf5 \\amp\cf2 .asSpec.map(v.value);\
		txt.string = \cf4 "val: "\cf2  ++ m.value.ampdb.round(0.01) + \cf4 "dB"\cf2 ;\
	\};\
txt = \cf3 SCStaticText\cf2 (w, 200@14);\
\cf0 )\
\
s.boot;\
(\
o = \cf6 OSCresponder\cf0 (s.addr,\cf7 '/tr'\cf0 ,\{ \cf6 arg\cf0  time,responder,msg;\
	if (msg[1] == z.nodeID, \{\
		\{ m.value = \cf7 \\amp\cf0 .asSpec.unmap(msg[3]) \}.defer;\
	\});\
\}).add;\
)\
\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf6 SynthDef\cf0 (\cf7 \\meter\cf0 , \{\cf6 arg\cf0  bus = 0, rate = 15, rel = 1;\
	\cf6 var\cf0  signal, amplitude;\
	signal = \cf6 In\cf0 .ar(bus,1);\
	amplitude = \cf6 Amplitude\cf0 .kr(signal, 0.01, 1); \cf8 // non modulatable controls\cf0 \
//	amplitude = \cf6 AmplitudeMod\cf0 .kr(signal, 0.01, rel);\
	\cf6 SendTrig\cf0 .kr(\cf6 Impulse\cf0 .kr(rate), 1200, amplitude);\
\}).send(s);\
)\
\
a = \{ \cf6 arg\cf0  amp=0.1; \cf6 Decay2\cf0 .ar(\cf6 Impulse\cf0 .ar(1.0), 0.1, 0.4, \cf6 SinOsc\cf0 .ar(1200,0,amp)) \}.play.play(addAction: \cf7 \\addToHead\cf0 )\
\
a = \{ \cf6 arg\cf0  amp=0.1; \cf6 AudioIn\cf0 .ar([1,2]) * amp \}.play(addAction: \cf7 \\addToHead\cf0 )\
a.set(\cf7 \\amp\cf0 , 1.0)\
a.free\
\
\
z = \cf6 Synth\cf0 .tail(1, \cf9 "meter"\cf0 );\
z.set(\cf7 \\rate\cf0 , 15)\
z.set(\cf7 \\rel\cf0 , 0.1)\
z.set(\cf7 \\rel\cf0 , 2)\
z.free\
\
o.remove;\
}