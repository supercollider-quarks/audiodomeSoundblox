{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red179\green179\blue255;\red191\green0\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf2 RedWindow
\fs24 \cf0 			wrapper for \cf2 SCWindow
\f1\b0 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs36 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs24 \cf0 superclass: \cf2 SCWindow
\fs36 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs24 \cf0 adding some functionallity to the standard window class.\
requires \cf2 RedVector
\f0\b \cf0 \
\

\f1\b0 see also [\cf2 \ul \ulc3 RedJWindow\cf0 \ulnone ], [\cf2 \ul SCWindow\cf0 \ulnone ]
\f0\b \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \ul instance methods:
\f0\b \ulnone \
	draw(func)
\f1\b0 \
		alias for drawHook_\
	
\f0\b play(fps= 25)
\f1\b0 \
		starts an internal thread on the \cf2 AppClock\cf0  updating at rate fps\
	
\f0\b stop
\f1\b0 \
		stop internal thread\
	
\f0\b resize([width, height])
\f1\b0 \
		change window size while keeping x and y position.  the argument can also be a \cf2 RedVector\cf0 \
	
\f0\b background_(color)
\f1\b0 \
		set window background.  alias for w.view.background_\
	
\f0\b isOpen
\f1\b0 \
		boolean\
	\ul \
instance variables:\ulnone \
	
\f0\b <mouse
\f1\b0 \
		returns a \cf2 RedVector\cf0  for mouse x and y position\
	
\f0\b <isPlaying
\f1\b0 \
		if the window is updating\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 \
\
w= \cf2 RedWindow\cf0 .new.front;\
w.close;\
\
\cf4 //or better - for platform independet code...\cf0 \
\cf2 GUI\cf0 .cocoa;\
w= \cf2 GUI\cf0 .redWindow.new(scroll:true).front;\
\
w.resize(\cf2 RedVector2D\cf0 [200, 200])\
w.background_(\cf2 Color\cf0 .red)\
\
w.draw\{\cf2 GUI\cf0 .pen.fillOval(\cf2 Rect\cf0 .aboutPoint(175.rand@175.rand, 50, 50))\}\
w.play(25)				\cf4 //25fps\cf0 \
w.stop\
\
(						\cf4 //mouse control\cf0 \
w.draw\{\
	\cf2 var\cf0  radius= 100.rand;\
	\cf2 GUI\cf0 .pen.strokeColor_(\cf2 Color\cf0 .red(0.5, radius/100));\
	\cf2 GUI\cf0 .pen.fillOval(\cf2 Rect\cf0 .aboutRedVector2D(w.mouse, radius))\
\}\
)\
w.play(25)				\cf4 //25fps\cf0 \
w.mouse\
w.isPlaying\
w.isOpen\
w.stop\
w.close\
}