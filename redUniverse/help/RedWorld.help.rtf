{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green0\blue0;\red179\green179\blue255;
\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf2 RedWorld
\fs24 \cf3 			fundamental object in the \cf2 RedUniverse\cf3  toolkit
\f1\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs36 \cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs24 \cf3 \
base for all other worlds like \cf2 RedWorld2\cf3 , \cf2 RedWorld3\cf3 .  implements simplified physical laws.\
\
see also [\cf2 \ul \ulc4 RedObject\cf3 \ulc1 ]\ulnone , [\cf2 \ul \ulc4 RedUniverse\cf3 \ulc1 ]\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf3 \ul class methods:
\f0\b \ulnone \
	*new(dim, gravity, maxVel, damping)
\f1\b0 \
		create a new world.  see class source for defaults.\
\
\ul instance methods:\ulnone \
	
\f0\b add(redObj)
\f1\b0 \
		manually add an object to \cf2 this\cf3  world.  usually never needed.\
	
\f0\b remove(redObj)
\f1\b0 \
		manually remove an object from \cf2 this\cf3  world.\
	
\f0\b contain(redObj)
\f1\b0 \
		wrap an object around world dimensions.  ie world without borders - going out on the right side\
		brings the object back on the left.\
	
\f0\b contains(redObj)
\f1\b0 \
		check if an object is within world dimensions.  used for detecting wall bounce.  returns boolean.\
	\
\ul instance variables:
\f0\b \ulnone \
	<>dim
\f1\b0 \
		size of \cf2 this\cf3  world (\cf2 RedVector\cf3  of any dimension).  ie the world can have any number of dimensions.\
	
\f0\b <>gravity
\f1\b0 \
		world gravity (\cf2 RedVector\cf3  of any dimension) for each dimension.\
	
\f0\b <>maxVel
\f1\b0 \
		scalar with maximum velocity.  ie \cf5 'speed of light'\cf3  for \cf2 this\cf3  world.\
	
\f0\b <>damping
\f1\b0 \
		scalar.  the cost of running into walls etc.\
	
\f0\b <>objects
\f1\b0 \
		array of all objects currently in \cf2 this\cf3  world.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf3 \
\
a= \cf2 RedWorld\cf3 .new\
b= \cf2 RedObject\cf3 (a)\
\
a.dump\
\
\cf2 RedUniverse\cf3 .worlds\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 RedUniverse\cf3 .remove(a)\
\cf2 RedUniverse\cf3 .worlds\
}