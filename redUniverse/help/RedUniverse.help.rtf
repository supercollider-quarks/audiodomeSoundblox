{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green0\blue0;\red179\green179\blue255;
\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf2 RedUniverse
\fs24 \cf3 			fundamental object in the \cf2 RedUniverse\cf3  toolkit
\f1\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs36 \cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs24 \cf3 \
global class for dealing with worlds.  there is only ever one universe.  all worlds register themselves in the universe when created.\
\
see also [\cf2 \ul \ulc4 RedObject\cf3 \ulc1 ]\ulnone , [\cf2 \ul \ulc4 RedWorld\cf3 \ulc1 ]\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf3 \ul class methods:
\f0\b \ulnone \
	*clear
\f1\b0 \
		clear all worlds\
	
\f0\b *add(redWorld)
\f1\b0 \
		manually add a world to the universe.  usually never needed.\
	*
\f0\b remove(redWorld)
\f1\b0 \
		manually remove a world from the universe.\
	*
\f0\b migrate(redObj, toRedWorld)
\f1\b0 \
		move one object from its world to another.\
	
\f0\b *migrateAll(fromRedWorld, toRedWorld)
\f1\b0 \
		move all objects in one world to another.\
	
\f0\b *interpolate(aRedWorld, bRedWorld, percent= 0.5)
\f1\b0 \
		return a new world inbetween to other.  all world parameters are interpolated but objects stay.\
	
\f0\b *interpolateMigrate(aRedWorld, bRedWorld, percent= 0.5)
\f1\b0 \
		interpolates and also move over all objects.  usually you will want to remove the old worlds manually\
	
\f0\b *write(path)
\f1\b0 \
		save all worlds and objects and their respective state to disk.\
	
\f0\b *read(path)
\f1\b0 \
		import worlds and objects and their respective state from disk.\
	\
\ul class variables:
\f0\b \ulnone \
	<>worlds
\f1\b0 \
		array of all available worlds\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf3 \
\
a= \cf2 RedWorld\cf3 .new\
b= \cf2 RedObject\cf3 (a)\
\
\cf2 RedUniverse\cf3 .worlds\
\cf2 RedUniverse\cf3 .remove(a)\
\cf2 RedUniverse\cf3 .worlds\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 RedUniverse\cf3 .write(\cf5 "testsave"\cf3 )\
\cf2 RedUniverse\cf3 .clear\
\cf2 RedUniverse\cf3 .worlds\
\cf2 RedUniverse\cf3 .read(\cf5 "testsave"\cf3 )\
\cf2 RedUniverse\cf3 .worlds\
}