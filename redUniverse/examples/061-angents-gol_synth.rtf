{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red0\green115\blue0;\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 //agents playing game-of-life. objects are neightbours if they touch\cf3 \
\cf2 //standard rule modified to also include: if no neighbours then become alive\cf3 \
\cf2 //with mouse controlling world gravity\cf3 \
\cf2 //with sound on/off\cf3 \
\
(\
s.waitForBoot\{\
	\cf4 var\cf3  width= 300, height= 300, w, wgrav, world, n= 40,\
		rule, px= 0, py= 0, synths;\
	\
	\cf2 //--synthesis\cf3 \
	\cf4 SynthDef\cf3 (\cf5 \\sine\cf3 , \{\cf4 |out= 0, freq= 400, beat= 1, amp= 1, pan= 0|\cf3 \
		\cf4 var\cf3  z;\
		z= \cf4 SinOsc\cf3 .ar(freq+\cf4 SinOsc\cf3 .ar(40, 0, beat), 0, \cf4 Lag\cf3 .kr(amp, 0.02));\
		\cf4 Out\cf3 .ar(out, \cf4 Pan2\cf3 .ar(z, pan));\
	\}).send(s);\
	\
	\cf2 //--world\cf3 \
	w= \cf4 GUI\cf3 .redWindow.new(\cf6 "agents test ca2"\cf3 , \cf4 Rect\cf3 (128, 64, width, height)).front;\
	wgrav= \cf4 RedVector2D\cf3 [0, 0.98];\
	\cf2 //world= RedWorld(RedVector2D[width, height], wgrav, 10, 0.1); //dim,grav,maxvel,damp\cf3 \
	world= \cf4 RedWorld3\cf3 (\cf4 RedVector2D\cf3 [width, height], wgrav, 10, 0.1); \cf2 //dim,grav,maxvel,damp\cf3 \
	\
	\cf2 //--objects\cf3 \
	\{\cf4 |i|\cf3 \
		\cf4 var\cf3  loc= \cf4 RedVector2D\cf3 [px+15, py+15];\
		\cf4 var\cf3  obj= \cf4 RedAgent\cf3 (world, loc, \cf4 RedVector2D\cf3 [0.5, 0.5].rand2, \cf4 nil\cf3 , 1, 10);\
		obj.state_((\cf5 \\cell\cf3 : 2.rand, \cf5 \\neighbours\cf3 : 0));\
		px= px+(obj.size*2-1);\
		if(px>(width*0.9), \{\
			px= 0;\
			py= py+(obj.size*2-1);\
		\});\
		obj\
	\}.dup(n);	\cf2 //world,loc,vel,acc,mass,size\cf3 \
	\
	synths= \{\cf4 |i|\cf3  \cf4 Synth\cf3 (\cf5 \\sine\cf3 , [\cf5 \\amp\cf3 , 0, \cf5 \\freq\cf3 , i/n*100+200])\}.dup(n);\
	\
	\cf2 //rule= #[[2, 3], [3]];						//rule "23/3" conways game of life\cf3 \
	\cf2 //rule= #[[2, 3], [3, 6]];					//rule "23/36" highlife\cf3 \
	rule= #[[2, 3], [0, 3]];					\cf2 //rule "23/30" modded conways game of life\cf3 \
	\
	\cf2 //--loop\cf3 \
	w.draw\{\
		world.gravity_(w.mouse/\cf4 RedVector2D\cf3 [width, height]-0.5);\
		world.objects.do\{\cf4 |o, i|\cf3 \
			\cf4 var\cf3  neighbours= 0;\
			world.objects.do\{\cf4 |oo, j|\cf3 \
				if(i!=j, \{\
					if(o.loc.distance(oo.loc)<(o.size*2).min(oo.size*2), \{\
						if(oo.state[\cf5 \\cell\cf3 ]==1, \{\
							neighbours= neighbours+1;\
						\}, \{\
							neighbours= neighbours-1;\
						\});\
					\});\
				\});\
			\};\
			o.state[\cf5 \\neighbours\cf3 ]= neighbours;\
		\};\
		world.objects.do\{\cf4 |o, i|\cf3 \
			\cf4 var\cf3  neighbours= o.state[\cf5 \\neighbours\cf3 ];\
			if(rule[1].includes(neighbours), \{\
				o.state[\cf5 \\cell\cf3 ]= 1;					\cf2 //stay/become alive\cf3 \
			\}, \{\
				if(rule[0].includes(neighbours).not, \{\
					o.state[\cf5 \\cell\cf3 ]= 0;				\cf2 //dies\cf3 \
				\});\
			\});\
		\};\
		world.objects.do\{\cf4 |o, i|\cf3 \
			\cf2 //o.addForceWander2D;\cf3 \
			o.addForce(world.gravity);\
			o.update;\
			world.contain(o);\
			synths[i].set(						\cf2 //simple a/v mapping\cf3 \
				\cf5 \\amp\cf3 , o.state[\cf5 \\cell\cf3 ]/n,				\cf2 //cell on= sound on\cf3 \
				\cf5 \\pan\cf3 , o.loc[0]/width*2-1,			\cf2 //pan= x position\cf3 \
				\cf5 \\beat\cf3 , (1-(o.loc[1]/height)*400)		\cf2 //freq= y position\cf3 \
			);\
			\
			\cf2 //--render\cf3 \
			\cf4 GUI\cf3 .pen.fillColor_(\cf4 Color\cf3 .grey(o.state[\cf5 \\cell\cf3 ]*0.85+0.15, 0.5));\
			\cf4 GUI\cf3 .pen.fillOval(\cf4 Rect\cf3 .aboutRedObject2D(o));\
		\};\
	\}.play;\
\})}