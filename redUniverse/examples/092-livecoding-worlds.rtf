{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 //everybody wanders and chases the next boid\cf3 \
\cf2 //livecoding world crossfades and sequences\cf3 \
\
(\
	\cf2 //~world										//our handles  for livecoding\cf3 \
	\cf2 //~win\cf3 \
	\cf2 //~n\cf3 \
	\
	\cf4 var\cf3  width= 300, height= 300, wgrav;\
	~n= 8;\
	\
	\cf2 //--world\cf3 \
	\cf4 RedUniverse\cf3 .clear;\
	~win= \cf4 GUI\cf3 .redWindow.new(\cf5 "livecoding worlds test"\cf3 , \cf4 Rect\cf3 (128, 164, width, height)).front;\
	~world= \cf4 RedWorld\cf3 .new; \cf2 //dim,grav,maxvel,damp\cf3 \
	\
	\cf2 //--objects\cf3 \
	\{\
		\cf4 var\cf3  loc= \cf4 RedVector2D\cf3 [width, height].rand;\
		\cf4 var\cf3  vel= \cf4 RedVector2D\cf3 [0.5, 0.5].rand2;\
		\cf4 var\cf3  mass= 1;\
		\cf4 RedBoid\cf3 (~world, loc, vel, 0, mass, mass*5) \cf2 //world,loc,vel,acc,mass,size\cf3 \
			.maxForce_(0.6.rrand(1.6));\
	\}.dup(~n);\
	\
	\cf2 //--loop\cf3 \
	~win.draw\{\
		if(~world.gravity[0]>1, \{\
			~win.background_(\cf4 Color\cf3 .red(1, 0.5));\
		\}, \{\
			~win.background_(\cf4 Color\cf3 .blue(~world.gravity[1], 0.5));\
		\});\
		~world.objects.do\{\cf4 |o, i|\cf3 \
			if(i!=0, \{\
				o.addForceWander2D;\
				o.addForceSeek(~world.objects.wrapAt(i-1).loc);\
			\}, \{\
				o.addForceWander2D;\
			\});\
			o.addForce(~world.gravity);\
			o.update;\
			~world.contain(o);\
			\
			\cf2 //--render\cf3 \
			\cf4 GUI\cf3 .pen.fillColor_(\cf4 Color\cf3 .grey(1-(i/~n), 0.5));\
			\cf4 GUI\cf3 .pen.fillOval(\cf4 Rect\cf3 .aboutRedObject2D(o));\
		\};\
	\}.play;\
)\
\
\
\cf2 //--livecoding interpolates worlds\cf3 \
\
\cf2 //--first create 2 different worlds\cf3 \
~black= \cf4 RedWorld3\cf3 (\cf4 RedVector2D\cf3 [400, 400], \cf4 RedVector2D\cf3 [0, 0], 5, 0.01);\
~blue= \cf4 RedWorld3\cf3 (\cf4 RedVector2D\cf3 [300, 300], \cf4 RedVector2D\cf3 [0, 0.99], 5, 0.99);\
\
\cf2 //--interpolate and migrate\cf3 \
(\
~mix= \cf4 RedUniverse\cf3 .interpolate(~blue, ~black, 0.5);		\cf2 //half black, half blue\cf3 \
~world= \cf4 RedUniverse\cf3 .migrateAll(~world, ~mix);			\cf2 //move all to new world\cf3 \
~win.resize(~world.dim);							\cf2 //resize window\cf3 \
)\
\
\
\cf2 //--task xfade\cf3 \
(\
\{\
	50.do\{\cf4 |i|\cf3 \
		~mix= \cf4 RedUniverse\cf3 .interpolate(~black, ~blue, i/49);\
		~world= \cf4 RedUniverse\cf3 .migrateAll(~world, ~mix);\
		~win.resize(~world.dim);\
		0.1.wait;\
	\}\
\}.fork(\cf4 AppClock\cf3 )\
)\
\
\cf2 //--another world with strong gravity left\cf3 \
~red= \cf4 RedWorld3\cf3 (\cf4 RedVector\cf3 [500, 350], \cf4 RedVector2D\cf3 [2, 0], 10);\
\
\cf2 //--task sequence worlds\cf3 \
(t= \{\
	\cf4 inf\cf3 .do\{\cf4 |i|\cf3 \
		~mix= [~blue, ~black, ~red][i%5%3];\
		~world= \cf4 RedUniverse\cf3 .migrateAll(~world, ~mix);\
		~win.resize(~world.dim);\
		0.5.wait;\
	\}\
\}.fork(\cf4 AppClock\cf3 )\
)\
\
t.stop\
\cf4 RedUniverse\cf3 .clear\
~win.close}