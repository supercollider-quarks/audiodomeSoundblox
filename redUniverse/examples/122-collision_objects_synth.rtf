{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red0\green115\blue0;\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 //multiple objects within a world with gravity force and also collision detection\cf3 \
\cf2 //color and size depends on object's mass\cf3 \
\cf2 //sound - collision velocity mapped to amplitude, mass to dur and freq\cf3 \
\
(\
s.waitForBoot\{\
	\cf4 var\cf3  width= 300, height= 300, w, wgrav, world, n= 10,\
		synths;\
	\
	\cf2 //--synthesis\cf3 \
	\cf4 SynthDef\cf3 (\cf5 \\fm\cf3 , \{\cf4 |out= 0, t_trig= 0, dur= 0.5, freq= 400, freq2= 606, amount= 10, amp= 1, pan= 0|\cf3 \
		\cf4 var\cf3  e, z;\
		e= \cf4 EnvGen\cf3 .kr(\cf4 Env\cf3 .perc(dur*0.01, dur), t_trig);\
		z= \cf4 BPF\cf3 .ar(\cf4 LFSaw\cf3 .ar(freq+\cf4 SinOsc\cf3 .ar(freq2, 0, amount), 0, amp), freq2*2);\
		\cf4 Out\cf3 .ar(out, \cf4 Pan2\cf3 .ar(z*e, pan));\
	\}).send(s);\
	\
	\cf2 //--world\cf3 \
	w= \cf4 GUI\cf3 .redWindow.new(\cf6 "collision test2"\cf3 , \cf4 Rect\cf3 (128, 64, width, height)).front;\
	wgrav= \cf4 RedVector2D\cf3 [-0.1, 0.98];					\cf2 //world xy gravity\cf3 \
	world= \cf4 RedWorld3\cf3 (\cf4 RedVector2D\cf3 [width, height], wgrav, 10, 0.1); \cf2 //dim,grav,maxvel,damp\cf3 \
	\
	\cf2 //--objects\cf3 \
	\{\
		\cf4 var\cf3  vel= \cf4 RedVector2D\cf3 [2.rand2, -5];			\cf2 //random initial velocity for each object\cf3 \
		\cf4 var\cf3  mass= 0.5.rrand(5).round(0.1);			\cf2 //random mass for each object\cf3 \
		\cf4 RedObject\cf3 (world, \cf4 RedVector2D\cf3 [width, height].rand, vel, 0, mass, mass*5); \cf2 //world,loc,vel,acc,mass,size\cf3 \
	\}.dup(n);\
	synths= \{\cf4 Synth\cf3 (\cf5 \\fm\cf3 , [\cf5 \\amp\cf3 , 0])\}.dup(n);\
	\
	\cf2 //--loop\cf3 \
	w.draw\{\
		\cf4 var\cf3  set;\
		set= \cf4 Set\cf3 .new;\
		world.objects.do\{\cf4 |o, i|\cf3 \
			o.addForce(world.gravity);\
			world.objects.do\{\cf4 |oo, j|\cf3 \
				if(i!=j, \{\
					if(o.collide(oo), \{\
						set.add([i, j].sort)\
					\})\
				\})\
			\};\
			o.update;\
			world.contain(o);\
			\
			\cf2 //--render\cf3 \
			\cf4 GUI\cf3 .pen.strokeColor_(\cf4 Color\cf3 .grey(o.mass/5));\
			\cf4 GUI\cf3 .pen.strokeOval(\cf4 Rect\cf3 .aboutRedObject2D(o));\
		\};\
		set.do\{\cf4 |indexes|\cf3 \
			\cf4 var\cf3  o= world.objects[indexes[0]];\
			\cf4 var\cf3  oo= world.objects[indexes[1]];\
			\cf4 var\cf3  mag= o.vel.mag+oo.vel.mag/(world.maxVel*2);\
			synths[indexes[0]].set(\
				\cf5 \\t_trig\cf3 , 1,\
				\cf5 \\amp\cf3 , mag.pow(2)/n,\
				\cf5 \\dur\cf3 , o.mass/5,\
				\cf5 \\freq\cf3 , (5-o.mass).linexp(0, 5, 200, 2000),\
				\cf5 \\freq2\cf3 , (5-o.mass).linexp(0, 5, 200, 2000)\
			);\
		\};\
	\}.play;\
\}\
)\
}