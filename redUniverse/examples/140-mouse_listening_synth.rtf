{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 //listener position test\cf3 \
\cf2 //with mouse controlling listening position/mix\cf3 \
\cf2 //with sound: freq mapped to y, pan mapped to x, mass mapped to beating, amp and lowpass\cf3 \
\
(\
s.waitForBoot\{\
	\cf4 var\cf3  width= 640, height= 480, w, world, n= 10, synths;\
	\
	\cf2 //--world\cf3 \
	\cf4 Routine\cf3 \{\
	w= \cf4 GUI\cf3 .redWindow.new(\cf5 "listening pos test"\cf3 , \cf4 Rect\cf3 (128, 64, width, height)).front;\
	world= \cf4 RedWorld3\cf3 (\cf4 RedVector2D\cf3 [width, height], damping:0.5);		 \cf2 //dim,grav,maxvel,damp\cf3 \
	\
	\cf2 //--synthesis\cf3 \
	\cf4 SynthDef\cf3 (\cf6 \\beating\cf3 , \{\cf4 |out= 0, freq= 400, beat= 1, lp= 800, amp= 0, pan= 0|\cf3 \
		\cf4 var\cf3  z;\
		z= \cf4 RLPF\cf3 .ar(\cf4 Mix\cf3 (\cf4 LFSaw\cf3 .ar(freq+[0, beat], 0, amp)), lp);\
		\cf4 Out\cf3 .ar(out, \cf4 Pan2\cf3 .ar(z, pan));\
	\}).send(s);\
	0.5.wait;\
	\
	\cf2 //--objects\cf3 \
	\{\
		\cf4 var\cf3  loc= \cf4 RedVector2D\cf3 [width, height].rand;		\cf2 //initial xy location\cf3 \
		\cf4 var\cf3  mass= 1.rrand(10);\
		\cf4 RedAgent\cf3 (world, loc, \cf4 RedVector2D\cf3 [0.001, 0.001].rand2, \cf4 nil\cf3 , mass, mass) \cf2 //world,loc,vel,acc,mass,size\cf3 \
			.maxForce_(0.001)\
			.wdistance_(10)\
			.wchange_(0.9)\
			.state_((\cf6 \\synth\cf3 : \cf4 Synth\cf3 (\cf6 \\beating\cf3 )))\
	\}.dup(n);\
	\
	\cf2 //--loop\cf3 \
	w.draw\{\
		4.do\{\cf4 |i|\cf3 \
			\cf4 GUI\cf3 .pen.fillColor_(\cf4 Color\cf3 .grey(0.4, i+1/(4)));\
			\cf4 GUI\cf3 .pen.fillOval(\cf4 Rect\cf3 .aboutRedVector2D(w.mouse, (4-i)/3*50));\
		\};\
		world.objects.do\{\cf4 |o, i|\cf3 						\cf2 //iterate all objects in this world\cf3 \
			o.addForceWander2D;\
			o.update;								\cf2 //object update\cf3 \
			world.contain(o);						\cf2 //keep within world borders\cf3 \
			\
			o.state[\cf6 \\synth\cf3 ].set(\
				\cf6 \\freq\cf3 , (height-o.loc[1]/height).linexp(0, 1, 200, 2000),\
				\cf6 \\beat\cf3 , (10-o.mass).linlin(1, 10, 0.5, 5),\
				\cf6 \\lp\cf3 , (10-o.mass).linexp(1, 10, 200, 2000),\
				\cf6 \\pan\cf3 , o.loc[0]/width*2-1,\
				\cf6 \\amp\cf3 , (width-o.loc.distance(w.mouse)/width).pow(8)\
					*(o.mass).linlin(1, 10, 0, 2/n)\
			);\
			\
			\cf2 //--render\cf3 \
			\cf4 GUI\cf3 .pen.strokeColor_(\cf4 Color\cf3 .grey(0.7, 0.5));\
			\cf4 GUI\cf3 .pen.strokeOval(\cf4 Rect\cf3 .aboutRedObject2D(o));\
		\}\
	\}.play;\
	\}.play(\cf4 AppClock\cf3 );\
\})\
}