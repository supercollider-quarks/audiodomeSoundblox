<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<title></title>
<meta name="Generator" content="Cocoa HTML Writer">
<meta name="CocoaVersion" content="1038.25">
<style type="text/css">
p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica}
p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; min-height: 14.0px}
p.p3 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px 'Lucida Grande'; min-height: 15.0px}
p.p4 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; color: #0000bf}
p.p5 {margin: 0.0px 0.0px 0.0px 0.0px; font: 14.0px Helvetica; min-height: 17.0px}
p.p6 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; min-height: 12.0px}
p.p7 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; color: #0000bf; min-height: 12.0px}
p.p8 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; color: #cd1612}
p.p9 {margin: 0.0px 0.0px 0.0px 0.0px; font: 14.0px Helvetica}
p.p10 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco}
p.p11 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; color: #bf0000}
p.p12 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; color: #606060}
span.s1 {font: 18.0px Helvetica}
span.s2 {color: #0000bf}
span.s3 {color: #000000}
span.s4 {color: #bf0000}
span.s5 {color: #606060}
span.Apple-tab-span {white-space:pre}
</style>
</head>
<body>
<p class="p1"><span class="s1"><b>UnitTest<span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></b></span><b>a class for programmatic testing of classes</b></p>
<p class="p2"><br></p>
<p class="p1">In order to make sure a method works correctly, a test can be implemented that assures the correct behavior.</p>
<p class="p1">It is a common practice to write tests to clarify how an object should respond, and it may avoid inconsistencies on the long run. A test is always a subclass of UnitTest, implementing at least one method starting with test_.</p>
<p class="p2"><br></p>
<p class="p1"><b>superclass: </b><a href="SC://Object"><span class="s2"><b>Object</b></span></a></p>
<p class="p2"><br></p>
<p class="p1">see also: <a href="UnitTestScript.html"><span class="s2">UnitTestScript</span></a> (tests independent of classes).</p>
<p class="p2"><br></p>
<p class="p2"><br></p>
<p class="p1"><b>*gui<span class="Apple-converted-space"> </span></b></p>
<p class="p1"><span class="Apple-tab-span">	</span>For a graphical interface to all tests, run this line:</p>
<p class="p3"><br></p>
<p class="p4"><span class="Apple-tab-span">	</span>UnitTest<span class="s3">.gui</span></p>
<p class="p2"><br></p>
<p class="p1"><b>*runAll</b></p>
<p class="p2"><br></p>
<p class="p1"><span class="Apple-tab-span">	</span>runs all subclasses of UnitTest</p>
<p class="p2"><span class="Apple-tab-span">	</span></p>
<p class="p1"><b>run</b></p>
<p class="p1"><span class="Apple-tab-span">	</span>All method names that start with <b>test_</b> are invoked.<span class="Apple-converted-space"> </span></p>
<p class="p2"><br></p>
<p class="p2"><br></p>
<p class="p1"><b>YourClass.test</b></p>
<p class="p2"><br></p>
<p class="p1"><span class="Apple-tab-span">	</span>Runs the test class for YourClass, which is assumed to be named TestYourClass.</p>
<p class="p1"><span class="Apple-tab-span">	</span>If no test class if found it politely declines.</p>
<p class="p2"><br></p>
<p class="p2"><br></p>
<p class="p1"><span class="Apple-tab-span">	</span>UnitTests for Common library classes are kept in the CommonTests quark.</p>
<p class="p1"><span class="Apple-tab-span">	</span>This enables you to easily install and uninstall these tests.</p>
<p class="p5"><br></p>
<p class="p2"><br></p>
<p class="p1"><b>assert(test, comment, report, onFailure )</b></p>
<p class="p2"><span class="Apple-tab-span">	</span></p>
<p class="p1"><span class="Apple-tab-span">	</span>Make sure that the test returns true. Post the comment if report is true.</p>
<p class="p6"><br></p>
<p class="p6"><span class="Apple-converted-space"> </span></p>
<p class="p1"><b>assertEquals(a, b, comment, report, onFailure )</b></p>
<p class="p2"><span class="Apple-tab-span">	</span></p>
<p class="p1"><span class="Apple-tab-span">	</span>Make sure that a equals b. Post the comment.</p>
<p class="p7"><br></p>
<p class="p7"><br></p>
<p class="p8">// todo: document more methods.</p>
<p class="p7"><br></p>
<p class="p3"><br></p>
<p class="p9"><b>Writing Unit tests</b></p>
<p class="p6"><br></p>
<p class="p4"><span class="Apple-tab-span">	</span>TestYourClass<span class="s3"> : </span>UnitTest<span class="s3"> {</span></p>
<p class="p7"><span class="Apple-tab-span">	</span></p>
<p class="p10"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>setUp {</p>
<p class="p11"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// this will be called before each test</p>
<p class="p10"><span class="s4"><span class="Apple-tab-span">	</span></span><span class="Apple-tab-span">	</span>}</p>
<p class="p10"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>tearDown {</p>
<p class="p11"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// this will be called after each test</p>
<p class="p10"><span class="s4"><span class="Apple-tab-span">	</span></span><span class="Apple-tab-span">	</span>}</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-converted-space"> </span></p>
<p class="p10"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>test_yourMethod {</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-converted-space"> <span class="Apple-tab-span">	</span></span></p>
<p class="p11"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span></span></span>// every method named test_</p>
<p class="p11"><span class="Apple-tab-span">	</span><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span></span></span>// will be run</p>
<p class="p6"><span class="s4"><span class="Apple-tab-span">	</span></span><span class="Apple-tab-span">	</span><span class="Apple-converted-space"> <span class="Apple-tab-span">	</span></span></p>
<p class="p10"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span></span><span class="s2">this</span>.assert( 6 == 6, <span class="s5">"6 should equal 6"</span>);</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-converted-space"> <span class="Apple-tab-span">	</span></span></p>
<p class="p10"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span></span><span class="s2">this</span>.assertEquals( 9, 9, <span class="s5">"9 should equal 9"</span>);</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-converted-space"> <span class="Apple-tab-span">	</span></span></p>
<p class="p10"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span></span><span class="s2">this</span>.assertFloatEquals( 4.0 , 1.0 * 4.0 / 4.0 * 4.0,<span class="Apple-converted-space"> </span></p>
<p class="p12"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span></span>"floating point math should be close to equal"<span class="s3">);</span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-converted-space"> </span></p>
<p class="p11"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span></span></span>// we are inside a Routine, you may wait</p>
<p class="p10"><span class="s4"><span class="Apple-tab-span">	</span></span><span class="Apple-tab-span">	</span><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span></span>1.0.wait;</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-converted-space"> <span class="Apple-tab-span">	</span></span></p>
<p class="p11"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span></span></span>// this will wait until the server is booted</p>
<p class="p10"><span class="s4"><span class="Apple-tab-span">	</span></span><span class="Apple-tab-span">	</span><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span></span><span class="s2">this</span>.bootServer;</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-converted-space"> <span class="Apple-tab-span">	</span></span></p>
<p class="p11"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span></span></span>// if the server is already booted it will free all nodes</p>
<p class="p11"><span class="Apple-tab-span">	</span><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span></span></span>// and create new allocators, giving you a clean slate</p>
<p class="p6"><span class="s4"><span class="Apple-tab-span">	</span></span><span class="Apple-tab-span">	</span><span class="Apple-converted-space"> <span class="Apple-tab-span">	</span></span></p>
<p class="p10"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span></span>p = { <span class="s2">SinOsc</span>.ar };</p>
<p class="p10"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span></span>p.play;</p>
<p class="p10"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span></span>p.register;</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-converted-space"> <span class="Apple-tab-span">	</span></span></p>
<p class="p11"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span></span></span>// will wait until the condition is true</p>
<p class="p11"><span class="Apple-tab-span">	</span><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span></span></span>// will be considered a failure after 10 seconds</p>
<p class="p10"><span class="s4"><span class="Apple-tab-span">	</span></span><span class="Apple-tab-span">	</span><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span></span><span class="s2">this</span>.wait( { p.isPlaying }, <span class="s5">"waiting for synth to play"</span>, 10);</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-converted-space"> <span class="Apple-tab-span">	</span></span></p>
<p class="p10"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>}</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></p>
<p class="p10"><span class="Apple-tab-span">	</span>}</p>
<p class="p6"><br></p>
</body>
</html>
