{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fnil\fcharset77 Monaco;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 TUIObject\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1\b0\fs18 \cf2 /*\
Author: \
	2004, 2005, 2006\
	Till Bovermann \
	Neuroinformatics Group \
	Faculty of Technology \
	Bielefeld University\
	Germany\
*/\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs32 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0\fs24 \cf0 Abstract class. See\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs18 \cf3 	TUIObject\cf0 .subclasses
\f2\fs24 \
for implementations.\
\
A representation of a tangible user interface object (TUIO).\
Used at 
\f0\b [\ul TUIO_OSCServer\ulnone ].\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0 \cf0 Each object change first sets the changed parameter slots to the new values and \
then calls \
	
\f1\fs18 \cf3 TUIObject\cf0 -update
\f2\fs24 \
\
Recognized TUIO types are\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 2Dobj\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0 \cf0 	/tuio/2Dobj set <sessionID> ixyaXYAmr\
	/tuio/2Dobj alive [sessionID * #numberOfActiveObjects]\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 3Dobj\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0 \cf0 	/tuio/3Dobj set <sessionID> ixyzabcXYZABCmr\
	/tuio/3Dobj alive [sessionID * #numberOfActiveObjects]\
\
and a combination of\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 _[ixyzabcXYZABCmrP]\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\b0 \cf0 \
each object has\
	sessionID		temporary object ID\
	i			class ID\
	x,y,z			position in [0..1]\
	a,b,c			rotation in [0..2pi]\
	X,Y,Z		velocity in float\
	A,B,C		rot. velocity in float\
	m			pos. acceleration\
	r			rot. acceleration\
	P			freely definable\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs18 \cf2 // create a TUIObject, and use it to store messages coming from an [\cf2 \ul \ulc2 OSCReceiver\ulnone ]\cf0 \
t = \cf3 TUIObject\cf0 (\cf4 '2DObj'\cf0 );\
\
r = \cf3 OSCReceiver\cf0 (\cf4 '/tuio/2Dobj'\cf0 , \cf3 nil\cf0 );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 /*\
r = OSCReceiver('/tuio/2Dobj', NetAddr("127.0.0.1", 57120));\
*/\cf0 \
r.start;\
\cf3 OSCReceiverFunction\cf0 (r, \cf4 \\set\cf0 , \{\cf3 |sessionID, i, x, y, a, dX, dY, dA, m, r|\cf0  \
	[sessionID, i, x, y, a, dX, dY, dA, m, r].postln;\
	t.id 		= sessionID;\
	t.classID 	= i;\
	t.pos 		= [x,y,a];\
	t.velocity 	= [dX, dY, dA];\
	t.acceleration = [m,r];\
\});\
\
\cf2 // send some update messages\cf0 \
a = \cf3 NetAddr\cf0 (\cf5 "127.0.0.1"\cf0 , 57120);\
a.sendMsg(\cf4 '/tuio/2Dobj'\cf0 , \cf4 \\set\cf0 , 4711, 42, 0, 1, 2, 3, 4, 5, 6, 7);\
\
(\
(\
	(\cf5 "ID:\\t"\cf0 +t.id)			+ \cf5 "\\n"\cf0  ++\
	(\cf5 "Class:\\t"\cf0 +t.classID)		+ \cf5 "\\n"\cf0  ++\
	(\cf5 "Position:\\t"\cf0 +t.pos) 		+ \cf5 "\\n"\cf0  ++\
	(\cf5 "Velocity:\\t"\cf0 +t.velocity) 	+ \cf5 "\\n"\cf0  ++\
	(\cf5 "Acceleration:\\t"\cf0 			+t.acceleration)\
).postln;\
)\
\
\
\cf2 //testing the parsing\cf0 \
(\
\cf3 var\cf0  format;\
\cf3 var\cf0  dict;\
\cf3 var\cf0  object;\
\
object = \cf3 TUIObject\cf0 .new(format);\
\
dict = \cf3 IdentityDictionary\cf0 .new;\
\
format = \cf4 'ixyzabcXYZABCmrPPP'\cf0 .asString;\
format.do\{\cf3 |item, i|\cf0 \
	\cf3 TUIObject\cf0 .keyDict[item.asSymbol].value(object, i)\
\};\
\
(\
	(\cf5 "ID:\\t"\cf0 +object.id)			+ \cf5 "\\n"\cf0  ++\
	(\cf5 "Class:\\t"\cf0 +object.classID)		+ \cf5 "\\n"\cf0  ++\
	(\cf5 "Position:\\t"\cf0 +object.pos) 		+ \cf5 "\\n"\cf0  ++\
	(\cf5 "Velocity:\\t"\cf0 +object.velocity) 	+ \cf5 "\\n"\cf0  ++\
	(\cf5 "Acceleration:\\t"\cf0 			+object.acceleration)\
).postln;\
)\
\
)\
}