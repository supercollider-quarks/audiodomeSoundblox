{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 TUIO_OSCServer\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\fs24 \cf0 superclass: TUIOServer
\f1\b0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f2\fs18 \cf2 /*\
Author: \
	2004, 2005, 2006\
	Till Bovermann \
	Neuroinformatics Group \
	Faculty of Technology \
	Bielefeld University\
	Germany\
*/\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs32 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0\fs24 \cf0 a server fullfilling the TUIO-Specs.\
drawbacks:\
	no 'P' symbols are yet handled...\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 *new(formatString, netaddr, tuioClass)
\f1\b0 \
	formatString	a format String (explained in [
\f0\b \ul TUIObject
\f1\b0 \ulnone ])\
	netaddr		a netaddr default nothing, listening to all. \
	tuioClass		the Class of the created objects. \
				Must be a subclass of [
\f0\b \ul TUIObject
\f1\b0 \ulnone ], defaults to TUIObject.\
\

\f0\b start
\f1\b0 \
	starts listening\

\f0\b stop
\f1\b0 \
	stops litening\

\f0\b gui\
	
\f1\b0 creates a gui representing recognized objects
\f0\b \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b0 \cf0 \
\
\
Examples / Tests:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf2 // create a server and start it...\cf0 \
(\
\cf2 // ... listening to all messages from priamos\cf0 \
\cf2 //t = TUIO_OSCServer('_ixya', NetAddr("priamos.techfak.uni-bielefeld.de", nil)); \cf0 \
\cf2 // ... or\cf0 \
t = \cf3 TUIO_OSCServer\cf0 (\cf4 "_ixya"\cf0 , \cf3 nil\cf0 , \cf3 TUIObject\cf0 ); \cf2 // listen to all messages from anywhere\cf0 \
t.start;\
\cf2 // inspect its behavior\cf0 \
i = t.inspect;\
\
g = t.gui;\
\
\
\cf2 // send him messages\cf0 \
a = NetAddr.localAddr;\
\
a.sendMsg(\cf4 "/tuio/_ixya"\cf0 , \cf4 \\set\cf0 , 1, 42, 0.5, 0.5, 2pi.rand, 0, 0, 0); \
a.sendMsg(\cf4 '/tuio/_ixya'\cf0 , \cf4 \\alive\cf0 , 1);\
i.update;\
\
)\
\
a.sendMsg(\cf4 '/tuio/_ixya'\cf0 , \cf4 \\set\cf0 , 2, 42, 0.5, 0.8, 2pi.rand, 0, 0, 0);\
a.sendMsg(\cf4 '/tuio/_ixya'\cf0 , \cf4 \\alive\cf0 , 1, 2);\
i.update;\
\
a.sendMsg(\cf4 '/tuio/_ixya'\cf0 , \cf4 \\set\cf0 , 3, 42, 0.5, 0.6, 2pi.rand, 0, 0, 0);\
a.sendMsg(\cf4 '/tuio/_ixya'\cf0 , \cf4 \\alive\cf0 , 1, 2, 3);\
i.update;\
\
a.sendMsg(\cf4 '/tuio/_ixya'\cf0 , \cf4 \\set\cf0 , 4, 42, 0.5, 0.5, 2pi.rand, 0, 0, 0);\
a.sendMsg(\cf4 '/tuio/_ixya'\cf0 , \cf4 \\alive\cf0 , 1, 2, 3, 4);\
i.update;\
\
\
\
\cf2 // send alive messages\cf0 \
a.sendMsg(\cf4 '/tuio/_ixya'\cf0 , \cf4 \\alive\cf0 , 1, 2);\
i.update\
\cf2 // 5 does not exist\cf0 \
a.sendMsg(\cf4 '/tuio/_ixya'\cf0 , \cf4 \\alive\cf0 , 1, 2, 5);\
i.update\
\
a.sendMsg(\cf4 '/tuio/_ixya'\cf0 , \cf4 \\alive\cf0 );\
i.update;\
\
\
\
t.stop\
\
\
\
\
\cf2 // create a server and start it... now using 3D axis notation\cf0 \
(\
\cf2 // ... listening to all messages from priamos\cf0 \
\cf2 //t = TUIO_OSCServer('_ixya', NetAddr("priamos.techfak.uni-bielefeld.de", nil)); \cf0 \
\cf2 // ... or\cf0 \
t = \cf3 TUIO_OSCServer\cf0 (\cf4 "_ixyzuvw"\cf0 , \cf3 nil\cf0 , \cf3 TUIObject\cf0 ); \cf2 // listen to all messages from anywhere\cf0 \
t.start;\
\cf2 // inspect its behavior\cf0 \
i = t.inspect;\
\
g = t.gui;\
\
\
\cf2 // send him messages\cf0 \
n = \cf3 NetAddr.localAddr\cf0 ;\
\
n.sendMsg(\cf4 '/tuio/_ixyzuvw'\cf0 , \cf4 \\set\cf0 , 1, 42, 0.7.rand, 0.5, 2pi.rand, 10, 20, 30.rand); \
n.sendMsg(\cf4 '/tuio/_ixyzuvw'\cf0 , \cf4 \\alive\cf0 , 1);\
i.update;\
\
)\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
//////////////////////////////////////////////////////////////////////////////\
\
\
\
\
\
\
\
\
\
\
\
\cf2 //-----------------\cf0 \
\
p = \cf3 ProxySpace\cf0 .push(s.boot);\
\
~out.ar(2)\
~out.awake = \cf3 false\cf0 \
~out.play\
~out = \{\cf3 |freq = 800|\cf0  \cf3 Saw\cf0 .ar(freq, 0.1*\cf3 EnvGen\cf0 .kr(\cf3 Env\cf0 .perc, doneAction: 2))\}\
~out.spawn\
\
t = \cf3 TUIO_OSCServer\cf0 (\cf4 '2Dobj'\cf0 , \cf3 nil\cf0 , \cf3 TUIObjectSimpleFunc\cf0 )\
\cf3 TUIObjectSimpleFunc\cf0 .func = \{\cf3 |id, pos|\cf0  pos.postln; ~out.spawn([\cf4 \\freq\cf0 , 300+(pos[0]*1000)])\}\
t.start\
\
\
\cf2 //-------------using object classID's (TUIObjectNodeProxyPlayer)-------------------\cf0 \
(\
\cf3 Server\cf0 .default = \cf3 Server\cf0 .internal;\
\cf3 Server\cf0 .default.boot;\
)\
\cf3 Server\cf0 .default.initTree;\
s=\cf3 Server\cf0 .default;\
s.scope\
\cf3 Server\cf0 .default.dumpOSC(0)\
\cf3 Server\cf0 .default.queryAllNodes;\
\cf2 // create a server and start it\cf0 \
\cf2 //t = TUIO_OSCServer('2Dobj', NetAddr("priamos.techfak.uni-bielefeld.de", nil), TUIObjectNodeProxyPlayer)\cf0 \
t = \cf3 TUIO_OSCServer\cf0 (\cf4 '2Dobj'\cf0 , \cf3 nil\cf0 , \cf3 TUIObjectNodeProxyPlayer\cf0 )\
t.start\
t.stop\
\
\
\cf2 // send him messages\cf0 \
a = \cf3 A_OSCInterface\cf0 (\cf4 'tuio/2Dobj'\cf0 , \cf3 NetAddr\cf0 (\cf5 "127.0.0.1"\cf0 , 57120));\
a.send(\cf4 \\set\cf0 , 120, 120, 0);\
a.send(\cf4 \\set\cf0 , 120, 120, 0.5);\
a.send(\cf4 \\set\cf0 , 120, 120, 0.7);\
a.send(\cf4 \\set\cf0 , 1, 1, 0.4);\
a.send(\cf4 \\set\cf0 , 60, 60, 0.0);\
\
\cf2 // inspect its behavior\cf0 \
t.inspect\
\
\cf2 // send alive messages\cf0 \
a.send(\cf4 \\alive\cf0 , 1, 60);\
a.send(\cf4 \\alive\cf0 );\
\
\cf2 //-------------using TUIObjectGUIRep------------------\cf0 \
\
t = \cf3 TUIO_OSCServer\cf0 (\cf4 '2Dobj'\cf0 , \cf3 nil\cf0 , \cf3 TUIObjectGUIRep\cf0 )\
t.start\
\cf2 //t.stop\cf0 \
\
a = \cf3 A_OSCInterface\cf0 (\cf4 'tuio/2Dobj'\cf0 , \cf3 NetAddr\cf0 (\cf5 "127.0.0.1"\cf0 , 57120));\
a.send(\cf4 \\set\cf0 , 120, 120, 0);\
a.send(\cf4 \\set\cf0 , 120, 120, 0.5);\
a.send(\cf4 \\set\cf0 , 120, 120, 0.7);\
\
\cf2 // inspect its behavior\cf0 \
t.inspect\
\
\cf2 // drag this into the TUIOView:\cf0 \
b = \cf3 LogicObject\cf0 .new(\cf5 "testObj"\cf0 );\
\cf2 //b.setAction = \{|... args| args.postln;\}\cf0 \
b.makeWindow;\
b.inspect\
\
p = \cf3 ProxySpace\cf0 .push(s.boot)\
~out = \{\cf3 |freq = 100|\cf0  \cf3 SinOsc\cf0 .ar(freq)\}\
~out.play\
b.linkedProxy = ~out\
\{20.do\{a.send(\cf4 \\set\cf0 , 120, 120, 1.0.rand); 0.3.wait\}\}.fork \
~out.add\{\cf3 |freq = 100|\cf0  \cf3 Saw\cf0 .ar(1.2*freq)\}\
~out.add\{\cf3 |freq = 100|\cf0  \cf3 Saw\cf0 .ar(1.4*freq)\}\
~out.add\{\cf3 |freq = 100|\cf0  \cf3 Saw\cf0 .ar(1.6*freq)\}\
~out.add\{\cf3 |freq = 100|\cf0  \cf3 Saw\cf0 .ar(1.8*freq)\}\
~out.free(2)\
~out.play\
~out.class\
\
~out.set(\cf4 \\freq\cf0 , 440)\
\
\cf2 // send alive messages\cf0 \
a.send(\cf4 \\alive\cf0 , 120, 60);\
a.send(\cf4 \\alive\cf0 );\
}